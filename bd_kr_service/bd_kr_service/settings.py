"""
Django settings for bd_kr_service project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os  # Importing the built-in os module for handling file and directory paths
import environ  # Importing the environ package to manage environment variables

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent  # Setting the base directory to the parent directory of the settings file


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-ud!vt!euoi2vhuvb*#fq^ax!h#8g)vc!lm_tk&4g(ux6w&og3y'  # Secret key for Django project

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Debug mode for development; set to False in production

ALLOWED_HOSTS = []  # List of allowed hostnames for the application; adjust as needed


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # Administration interface
    'django.contrib.auth',  # Authentication system
    'django.contrib.contenttypes',  # Content type system
    'django.contrib.sessions',  # Session management
    'django.contrib.messages',  # Message framework
    'django.contrib.staticfiles',  # Handling static files
    'analytics'  # Custom application for analytics
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Security middleware
    'django.contrib.sessions.middleware.SessionMiddleware',  # Session management middleware
    'django.middleware.common.CommonMiddleware',  # Common middleware
    'django.middleware.csrf.CsrfViewMiddleware',  # Cross-site request forgery protection middleware
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # Authentication middleware
    'django.contrib.messages.middleware.MessageMiddleware',  # Message middleware
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection middleware
]

ROOT_URLCONF = 'bd_kr_service.urls'  # URL configuration for the project

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',  # Django template engine
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Additional template directories
        'APP_DIRS': True,  # Enable template searching in installed applications
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',  # Debug context processor
                'django.template.context_processors.request',  # Request context processor
                'django.contrib.auth.context_processors.auth',  # Authentication context processor
                'django.contrib.messages.context_processors.messages',  # Message context processor
            ],
        },
    },
]

WSGI_APPLICATION = 'bd_kr_service.wsgi.application'  # WSGI application configuration


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # PostgreSQL database engine
        'NAME': env('DB_NAME'),  # Database name from environment variables
        'USER': env('DB_USER'),  # Database user from environment variables
        'PASSWORD': env('DB_USER_PASSWORD'),  # Database password from environment variables
        'HOST': env('DB_HOST')  # Database host from environment variables
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'  # Default language for the application

TIME_ZONE = 'UTC'  # Default time zone for the application

USE_I18N = True  # Enable internationalization

USE_TZ = True  # Enable time zone support


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'  # URL for static files
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'bd_kr_service/static')]  # Additional directories for static files
STATIC_ROOT = os.path.join(BASE_DIR, 'static')  # Root directory for static files in production

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'  # Default primary key field type

